
package ChatService;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ChatService", targetNamespace = "http://ChatService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ChatService {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getThreads", targetNamespace = "http://ChatService/", className = "ChatService.GetThreads")
    @ResponseWrapper(localName = "getThreadsResponse", targetNamespace = "http://ChatService/", className = "ChatService.GetThreadsResponse")
    @Action(input = "http://ChatService/ChatService/getThreadsRequest", output = "http://ChatService/ChatService/getThreadsResponse")
    public String getThreads();

    /**
     * 
     * @param latestThreadId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkNewThread", targetNamespace = "http://ChatService/", className = "ChatService.CheckNewThread")
    @ResponseWrapper(localName = "checkNewThreadResponse", targetNamespace = "http://ChatService/", className = "ChatService.CheckNewThreadResponse")
    @Action(input = "http://ChatService/ChatService/checkNewThreadRequest", output = "http://ChatService/ChatService/checkNewThreadResponse")
    public String checkNewThread(
        @WebParam(name = "latestThreadId", targetNamespace = "")
        int latestThreadId);

    /**
     * 
     * @param threadId
     * @param latestMessageId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkNewThreadMessages", targetNamespace = "http://ChatService/", className = "ChatService.CheckNewThreadMessages")
    @ResponseWrapper(localName = "checkNewThreadMessagesResponse", targetNamespace = "http://ChatService/", className = "ChatService.CheckNewThreadMessagesResponse")
    @Action(input = "http://ChatService/ChatService/checkNewThreadMessagesRequest", output = "http://ChatService/ChatService/checkNewThreadMessagesResponse")
    public String checkNewThreadMessages(
        @WebParam(name = "threadId", targetNamespace = "")
        String threadId,
        @WebParam(name = "latestMessageId", targetNamespace = "")
        int latestMessageId);

    /**
     * 
     * @param creator
     * @param loginId
     * @param title
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addThread", targetNamespace = "http://ChatService/", className = "ChatService.AddThread")
    @ResponseWrapper(localName = "addThreadResponse", targetNamespace = "http://ChatService/", className = "ChatService.AddThreadResponse")
    @Action(input = "http://ChatService/ChatService/addThreadRequest", output = "http://ChatService/ChatService/addThreadResponse")
    public boolean addThread(
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "creator", targetNamespace = "")
        String creator,
        @WebParam(name = "loginId", targetNamespace = "")
        String loginId);

    /**
     * 
     * @param threadId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getThreadMessages", targetNamespace = "http://ChatService/", className = "ChatService.GetThreadMessages")
    @ResponseWrapper(localName = "getThreadMessagesResponse", targetNamespace = "http://ChatService/", className = "ChatService.GetThreadMessagesResponse")
    @Action(input = "http://ChatService/ChatService/getThreadMessagesRequest", output = "http://ChatService/ChatService/getThreadMessagesResponse")
    public String getThreadMessages(
        @WebParam(name = "threadId", targetNamespace = "")
        String threadId);

    /**
     * 
     * @param threadId
     * @param loginId
     * @param nickName
     * @param message
     */
    @WebMethod
    @RequestWrapper(localName = "addMessage", targetNamespace = "http://ChatService/", className = "ChatService.AddMessage")
    @ResponseWrapper(localName = "addMessageResponse", targetNamespace = "http://ChatService/", className = "ChatService.AddMessageResponse")
    @Action(input = "http://ChatService/ChatService/addMessageRequest", output = "http://ChatService/ChatService/addMessageResponse")
    public void addMessage(
        @WebParam(name = "nickName", targetNamespace = "")
        String nickName,
        @WebParam(name = "message", targetNamespace = "")
        String message,
        @WebParam(name = "threadId", targetNamespace = "")
        String threadId,
        @WebParam(name = "loginId", targetNamespace = "")
        String loginId);

}
